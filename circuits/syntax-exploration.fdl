; FDL - Factorio Description Language

; If two different red wires touch the same port, that's an error.
; If two different green wires touch the same port, that's an error.
; If a yellow wire and any other wire touch the same port, that's an error.

; A wire connected to an externally facing out port may not also be connected to an internal in port.
; A wire connected to an externally facing in port may not also be connected to an internal out port.

; Yellow wires may be connected externally to a red, a green wire, or both,
; and become the appropriate color internally. When connected to both a red and green wire,
; two wires are generated internally.

; You are allowed to flip the interface colors when you use a part.
; This will cause all internal signal colors to flip.

; (notsigs a b c ...) returns a signal that is not any of a, b, c...

; "scm" is a good scheme interpreter. http://people.csail.mit.edu/jaffer/SCM

; Reserved symbols:
;   * decpart ?
;   * defpart
;   * defmacro
;   * signal
;   * symbol
;   * red
;   * green
;   * yellow
;   * in
;   * out
;   * each
;   * any
;   * everything
;   * inout ?
;   * either ?
;   * enum ?
;   * one ?
;   * input-count ?
;   * decider-output-type ?

; TODO Many of these circuits suffer from ragged timing between their inputs and outputs.
;      Develop an automated way to test for this.

;; TODO Is any of this crap actually useful?
;(enum decider-output-type one input-count)
;
;(decpart constant
;    ((out yellow o)
;     ((list (tuple signal int)) signal-count-list)))
;
;(decpart arithmetic
;    ((in yellow i)
;     (out yellow o)
;     (symbol operation)
;     (signal lhs)
;     ((either signal int) rhs)
;     (signal result)))
;
;(decpart decider
;    ((in yellow i)
;     (out yellow o)
;     (symbol operation)
;     (signal lhs)
;     ((either signal int) rhs)
;     (signal result)
;     (decider-output-type output-type)))
